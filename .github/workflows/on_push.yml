name: Deploy SQL Migrations

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: heroku login
        uses: akhileshns/heroku-deploy@v3.13.15
        with:
          heroku_api_key: ${{secrets.HEROKU_API_KEY_2}}
          heroku_app_name: ${{secrets.HEROKU_APP_NAME}}
          heroku_email: ${{secrets.HEROKU_EMAIL_2}}
          justlogin: true

      - name: get modified SQL migrations
        id: get-migrations
        run: |
          set -o pipefail
          git diff --name-only HEAD~1 | grep 'heroku-pg/migrations/.*\up.sql$' > new_migrations.txt || true
          if [[ -s new_migrations.txt ]]; then
            echo "::set-output name=migrations::$(cat new_migrations.txt)"
          else
            echo "::set-output name=migrations::"
          fi

      - name: Deploy SQL migrations
        if: ${{ steps.get-migrations.outputs.migrations }} != ''
        run: |
          while IFS= read -r file; do
            echo "Preparing SQL migration for deployment to postgres: $file"
            temp_file=$(mktemp)
            echo "BEGIN;" > $temp_file
            cat "$file" >> $temp_file
            echo "COMMIT;" >> $temp_file

            # Deploy the SQL migration
            output=$(heroku pg:psql -a ${{ secrets.HEROKU_APP_NAME }} -f $temp_file 2>&1)

            # # Check if the output contains 'ERROR'
            if [[ $output == *"ERROR"* ]]; then
              echo "Error in SQL migration: $file - migratoin not commited"
            fi

            echo "$output"

            # Clean up the temporary file
            rm $temp_file
          done < new_migrations.txt
